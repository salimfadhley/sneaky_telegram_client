version: '3.7'

services:
  telegram_client:
    container_name: "sneaky_telegram_client"
    image: "salimfadhley/sneaky-telegram-client:latest"
    build:
      context: .
      target: py
    volumes:
    - ./src:/src:ro
    - ~/.config/simpleclient:/root/.config/simpleclient:ro
    - "/tmp/.tdlib_files/:/tmp/.tdlib_files/"
    - "./storage:/storage"
    - "session:/session"
    - "content:/content"
    entrypoint: run_client
    environment:
      SESSION_LOCATION: "/session"
      STORAGE_LOCATION: "/storage"
    depends_on:
      - elastic
      - kibana
      - nginx
      - rabbit
    networks:
      - internal

  python:
    container_name: "python"
    image: "salimfadhley/freedom-bot:latest"
    build:
      context: .
      target: py
    volumes:
      - ./src:/src:ro
      - ~/.config/simpleclient:/root/.config/simpleclient:ro
      - "/tmp/.tdlib_files/:/tmp/.tdlib_files/"
      - "./storage:/storage"
      - "session:/session"
      - "content:/content"
    environment:
      SESSION_LOCATION: "/session"
    networks:
      - internal
    ports:
    - "8888:8888"
    depends_on:
      - elastic
      - kibana
      - nginx
      - rabbit

  elastic:
    build:
      context: .
      target: sneaky_elastic
    container_name: elastic
    environment:
      - node.name=es01
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - internal
#    healthcheck:
#      test: curl -f -X GET "localhost:9200/_cluster/health?wait_for_status=green&timeout=1s" || exit 1
#      interval: "30s"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: http://elastic:9200
      ELASTICSEARCH_HOSTS: http://elastic:9200
    networks:
      - internal
    ports:
    - "5601:5601"
    depends_on:
      - elastic
  nginx:
    container_name: nginx
    build:
      context: .
      target: sneaky_nginx
    volumes:
      - "content:/usr/share/nginx/html/content:ro"
    ports:
      - "8080:80"
    environment:
      - NGINX_HOST=web.whatareyougetting.at

  rabbit:
    container_name: rabbit
    image: rabbitmq:3-management
    networks:
      - internal
    ports:
      - "5672:5672"
      - "15672:15672"


networks:
  internal:

volumes:
  session:
  elastic_data:
  kibana:
  content:
